{"version":3,"sources":["components/style/img/Atari-Logo.wine.svg","components/header.js","components/style/img/wheel.png","components/style/img/rulewheel.png","components/layouts/wheelset.js","components/style/img/100.png","components/style/img/500.png","components/style/img/1k.png","components/style/img/10k.png","components/style/img/50k.png","components/style/img/100k.png","components/style/img/500k.png","components/style/img/1m.png","components/layouts/chipset.js","components/style/img/spin.png","components/style/img/spin_hover.png","components/style/img/spin_click.png","components/style/img/resultpan.png","components/style/img/resultpan_lose.png","services/http-common.js","services/action.js","components/layouts/spinset.js","components/layouts/bettable.js","components/home.js","router/index.js","reducers/session.js","reducers/index.js","store/index.js","App.js","reportWebVitals.js","index.js"],"names":["Header","props","balance","useSelector","state","sessionData","myBalance","totalBetAmount","totalBet","Grid","container","justifyContent","alignItems","className","item","sm","md","src","logo","alt","Wheel","spinState","currentLength","useState","rotateLength","setRotateLength","rNum","setRNum","useEffect","_rNum","getRandom","$","css","style","position","rulewheel","wheelImage","chipDatas","img","chip1","value","chip2","chip3","chip4","chip5","chip6","chip7","chip8","Chip","chipValue","setChipValue","CurrentChipValue","spacing","map","chipData","xs","onClick","axios","create","method","headers","Action","send","data","http","post","Spin","spinImg","setSpinState","setSpinImg","setCurrentLength","setTotalBet","setImgs","betState","setBetState","token","dispatch","useDispatch","reachMoney","setReachMoney","originImg","setOriginIMG","startSpin","a","sendingData","betValue","then","res","status","rotateNum","moneyResult","setTimeout","console","log","message","catch","e","handleOpen","column1","column2","column3","dozen1","dozen2","dozen3","half1","half2","even","odd","red","black","type","payload","open","setOpen","lg","clickImg","width","height","onMouseEnter","hoverImg","onMouseDown","onMouseUp","onMouseLeave","Modal","onClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","display","fontSize","resultImg1","resultImg2","row1Info","row2Info","row3Info","rowArray1","rowArray2","rowArray3","BetTable","imgs","ChipsImgs","cover100","cover500","cover1000","cover10000","cover50000","cover100000","cover500000","cover1000000","OtherBetSet","newTotalBet","BetIncreasing","toString","x","Math","ceil","random","y","tempImg","push","ImgSetting","index","v","left","top","OtherHoverEvent","i","addClass","removeClass","border","cellSpacing","cellPadding","rowSpan","id","onMouseOut","borderRadius","colSpan","Home","initTotalBet","initImgs","window","onmessage","name","allowanceAmount","poolAddress","parent","postMessage","key","Routes","path","component","initState","pooladdress","sessionReducer","action","userDecoded","jwt_decode","err","combineReducers","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b38eab48.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Atari-Logo.wine.5afb4f4f.svg\";","import React from \"react\";\r\nimport { Grid } from '@mui/material';\r\nimport logo from \"./style/img/Atari-Logo.wine.svg\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nfunction Header(props) {\r\n    const balance = useSelector(state => state.sessionData.myBalance)\r\n    const totalBetAmount = useSelector(state => state.sessionData.totalBet);\r\n\r\n    return (\r\n        <Grid container justifyContent=\"center\" alignItems=\"center\" className=\"headerLogo\">\r\n            <Grid item sm={3} md={4}><img src={logo} alt=\"NoImg\" className=\"logoImg\" /></Grid>\r\n            <Grid item sm={9} md={8}>My balance: {balance - totalBetAmount}</Grid>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default Header;","export default __webpack_public_path__ + \"static/media/wheel.b6313657.png\";","export default __webpack_public_path__ + \"static/media/rulewheel.0109cd28.png\";","import React, { useEffect, useState } from \"react\";\n\nimport wheelImage from \"../style/img/wheel.png\";\nimport rulewheel from \"../style/img/rulewheel.png\";\n\nimport $ from \"jquery\";\n\nfunction Wheel({ spinState, currentLength }) {\n  const [rotateLength, setRotateLength] = useState(0);\n  const [rNum, setRNum] = useState(0);\n\n  function getRandom() {\n    var _rNum = rNum + 4;\n    // return Math.floor(rNum + (Math.random() * 30 + 10));\n    // return Math.floor(Math.random() * 5 + 4);\n    setRNum(_rNum);\n    return _rNum;\n  }\n\n  useEffect(() => {\n    setRotateLength(360 * getRandom() - (360 / 37) * currentLength);\n  }, [currentLength]);\n\n  useEffect(() => {\n    if (spinState === true) {\n      $(\".wheel\").css(\"transform\", \"rotate(\" + rotateLength + \"deg)\");\n    }\n  }, [rotateLength]);\n\n  return (\n    <div className=\"noselect\">\n      <div style={{ position: \"relative\" }}>\n        <img src={rulewheel} className=\"rulewheel\" alt=\"NoImg\" />\n        <img src={wheelImage} className=\"wheel\" alt=\"NoImg\" />\n      </div>\n    </div>\n  );\n}\n\nexport default Wheel;\n","export default __webpack_public_path__ + \"static/media/100.07ae9db1.png\";","export default __webpack_public_path__ + \"static/media/500.0028b117.png\";","export default __webpack_public_path__ + \"static/media/1k.a7a41479.png\";","export default __webpack_public_path__ + \"static/media/10k.a6a2ac70.png\";","export default __webpack_public_path__ + \"static/media/50k.eb2b3d33.png\";","export default __webpack_public_path__ + \"static/media/100k.cea5232f.png\";","export default __webpack_public_path__ + \"static/media/500k.1074f9d6.png\";","export default __webpack_public_path__ + \"static/media/1m.43060dc3.png\";","import React, { useEffect } from \"react\";\nimport { Grid } from '@mui/material';\nimport { useSelector } from \"react-redux\";\n\nimport chip1 from \"../style/img/100.png\"\nimport chip2 from \"../style/img/500.png\"\nimport chip3 from \"../style/img/1k.png\"\nimport chip4 from \"../style/img/10k.png\"\nimport chip5 from \"../style/img/50k.png\"\nimport chip6 from \"../style/img/100k.png\"\nimport chip7 from \"../style/img/500k.png\"\nimport chip8 from \"../style/img/1m.png\"\n\nconst chipDatas = [\n    {\n        img: chip1,\n        value: 100\n    }, {\n        img: chip2,\n        value: 500\n    }, {\n        img: chip3,\n        value: 1000\n    }, {\n        img: chip4,\n        value: 10000\n    }, {\n        img: chip5,\n        value: 50000\n    }, {\n        img: chip6,\n        value: 100000\n    }, {\n        img: chip7,\n        value: 500000\n    }, {\n        img: chip8,\n        value: 1000000\n    },\n]\n\nfunction Chip({\n    chipValue,\n    setChipValue\n}) {\n    const CurrentChipValue = (value) => {\n        setChipValue(value);\n    }\n\n    const balance = useSelector(state => state.sessionData.myBalance);\n    const totalBetAmount = useSelector(state => state.sessionData.totalBet);\n\n    useEffect(() => {\n        if (balance - totalBetAmount < chipValue)\n            CurrentChipValue(0);\n    }, [totalBetAmount, balance]);\n\n    return (\n        <Grid container sm={12} spacing={5} justifyContent=\"center\" alignItems=\"center\" className=\"noselect\">\n            {\n                chipDatas.map((chipData) => {\n                    return (\n                        <Grid item xs={3} sm={3} md={3} onClick={() => {\n                            if (balance - totalBetAmount >= chipData.value)\n                                CurrentChipValue(chipData.value);\n                        }}>\n                            {\n                                <img src={chipData.img} className={balance - totalBetAmount < chipData.value ? \"disableImg btnChip\" : chipValue === chipData.value ? \"active-btnChip\" : \"btnChip\"} alt=\"NoImg\" />\n                            }\n                        </Grid>\n                    )\n                })\n            }\n        </Grid>\n    );\n}\n\nexport default Chip;","export default __webpack_public_path__ + \"static/media/spin.8fdafab2.png\";","export default __webpack_public_path__ + \"static/media/spin_hover.8fdafab2.png\";","export default __webpack_public_path__ + \"static/media/spin_click.8fdafab2.png\";","export default __webpack_public_path__ + \"static/media/resultpan.b08f345b.png\";","export default __webpack_public_path__ + \"static/media/resultpan_lose.d9ef4946.png\";","import axios from \"axios\";\n\nconst BASE_URL = 'http://localhost:5555/api';\n\nexport default axios.create({\n    method: \"POST\",\n    headers: {\n        \"Content-type\": \"application/json\"\n    }\n})","import http from \"../services/http-common\";\n\nconst send = (data) => {\n  return http.post(\"/api/start-signal\", data);\n};\n\nconst Action = {\n    send\n};\n\nexport default Action;","import React, { useEffect, useState } from \"react\";\nimport { Grid, Modal, Fade, Backdrop } from \"@mui/material\";\n\n\nimport hoverImg from \"../style/img/spin.png\";\nimport originImg from \"../style/img/spin_hover.png\";\nimport clickImg from \"../style/img/spin_click.png\";\nimport resultImg1 from \"../style/img/resultpan.png\";\nimport resultImg2 from \"../style/img/resultpan_lose.png\";\n\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Action from \"../../services/action\";\n\nfunction Spin(props) {\n\n  const {\n    totalBet,\n    spinState,\n    spinImg,\n    setSpinState,\n    setSpinImg,\n    setCurrentLength,\n    setTotalBet,\n    setImgs,\n    betState,\n    setBetState,\n  } = props;\n\n  const token = useSelector(state => state.sessionData.token);\n  const myBalance = useSelector(state => state.sessionData.myBalance);\n  const totalBetAmount = useSelector(state => state.sessionData.totalBet);\n\n  const dispatch = useDispatch();\n\n  const [reachMoney, setReachMoney] = useState(null);\n\n  useEffect(() => {\n    setSpinImg(originImg);\n  }, []);\n\n  const setHoverIMG = () => {\n    setSpinImg(hoverImg);\n  };\n\n  const setClickIMG = () => {\n    setSpinImg(clickImg);\n  };\n\n  const setOriginIMG = () => {\n    setSpinImg(originImg);\n  };\n\n  const startSpin = async () => {\n    if (betState) {\n      const sendingData = {\n        token: token,\n        betValue: totalBet,\n      };\n      setSpinState(true);\n      Action.send(sendingData)\n        .then((res) => {\n          if (res.data.status == \"ok\") {\n            setCurrentLength(res.data.rotateNum);\n            setReachMoney(res.data.moneyResult);\n\n            setTimeout(() => {\n              setSpinState(false);\n            }, 9500);\n          } else {\n            console.log(res.data.message);\n          }\n        })\n        .catch((e) => {\n          console.log(e);\n        });\n    }\n  };\n\n  useEffect(() => {\n    if (spinState !== null && spinState === false) {\n      handleOpen();\n      setTotalBet({\n        0: 0,\n        1: 0,\n        2: 0,\n        3: 0,\n        4: 0,\n        5: 0,\n        6: 0,\n        7: 0,\n        8: 0,\n        9: 0,\n        10: 0,\n        11: 0,\n        12: 0,\n        13: 0,\n        14: 0,\n        15: 0,\n        16: 0,\n        17: 0,\n        18: 0,\n        19: 0,\n        20: 0,\n        21: 0,\n        22: 0,\n        23: 0,\n        24: 0,\n        25: 0,\n        26: 0,\n        27: 0,\n        28: 0,\n        29: 0,\n        30: 0,\n        31: 0,\n        32: 0,\n        33: 0,\n        34: 0,\n        35: 0,\n        36: 0,\n        column1: 0,\n        column2: 0,\n        column3: 0,\n        dozen1: 0,\n        dozen2: 0,\n        dozen3: 0,\n        half1: 0,\n        half2: 0,\n        even: 0,\n        odd: 0,\n        red: 0,\n        black: 0,\n      });\n      setImgs({\n        0: [],\n        1: [],\n        2: [],\n        3: [],\n        4: [],\n        5: [],\n        6: [],\n        7: [],\n        8: [],\n        9: [],\n        10: [],\n        11: [],\n        12: [],\n        13: [],\n        14: [],\n        15: [],\n        16: [],\n        17: [],\n        18: [],\n        19: [],\n        20: [],\n        21: [],\n        22: [],\n        23: [],\n        24: [],\n        25: [],\n        26: [],\n        27: [],\n        28: [],\n        29: [],\n        30: [],\n        31: [],\n        32: [],\n        33: [],\n        34: [],\n        35: [],\n        36: [],\n        column1: [],\n        column2: [],\n        column3: [],\n        dozen1: [],\n        dozen2: [],\n        dozen3: [],\n        half1: [],\n        half2: [],\n        even: [],\n        odd: [],\n        red: [],\n        black: [],\n      });\n      setBetState(false);\n\n      dispatch({\n        type: \"SET_MYBALANCE\",\n        payload: (myBalance - totalBetAmount + reachMoney)\n      })\n\n      dispatch({\n        type: \"SET_TOTALBET\",\n        totalBet: 0\n      })\n    }\n  }, [spinState]);\n\n  const [open, setOpen] = useState(false);\n  const handleOpen = () => setOpen(true);\n  const handleClose = () => setOpen(false);\n\n  return (\n    <Grid container justifyContent=\"space-between\" alignItems=\"center\">\n      <Grid item sm={2} xs={2}></Grid>\n      <Grid item lg={12} md={12} sm={8} xs={8}>\n        <div className=\"noselect\">\n          {spinState === true ? (\n            <img\n              src={clickImg}\n              style={{ width: \"100%\", height: \"100%\" }}\n              alt=\"NoImg\"\n            />\n          ) : (\n            <img\n              src={spinImg}\n              className=\"spin\"\n              alt=\"NoImg\"\n              onClick={startSpin}\n              onMouseEnter={setHoverIMG}\n              onMouseDown={setClickIMG}\n              onMouseUp={setOriginIMG}\n              onMouseLeave={setOriginIMG}\n            />\n          )}\n        </div>\n      </Grid>\n      <Grid item sm={2} xs={2}></Grid>\n      <Modal\n        open={open}\n        onClose={handleClose}\n        closeAfterTransition\n        BackdropComponent={Backdrop}\n        BackdropProps={{\n          timeout: 1000,\n        }}\n      >\n        <Fade in={open} className=\"resultpan\">\n          <div style={{ display: \"relative\" }}>\n            {reachMoney > 0 ? (\n              <span>\n                <label className=\"resulttitle\">\n                  <b style={{ fontSize: \"6vh\" }}>You Win!!!</b>\n                  <br />\n                  <br />\n                  &nbsp; {reachMoney}$\n                </label>\n                <img\n                  src={resultImg1}\n                  style={{ width: \"100%\", height: \"100%\" }}\n                  alt=\"NoImg\"\n                />\n              </span>\n            ) : (\n              <span>\n                <label className=\"resulttitle\">\n                  <b style={{ fontSize: \"6vh\" }}>You lost!</b>\n                </label>\n                <img\n                  src={resultImg2}\n                  style={{ width: \"100%\", height: \"100%\" }}\n                  alt=\"NoImg\"\n                />\n              </span>\n            )}\n          </div>\n        </Fade>\n      </Modal>\n    </Grid>\n  );\n}\n\nexport default Spin;\n","import React from \"react\";\nimport { Grid } from \"@mui/material\";\n\nimport cover100 from \"../style/img/100.png\";\nimport cover500 from \"../style/img/500.png\";\nimport cover1000 from \"../style/img/1k.png\";\nimport cover10000 from \"../style/img/10k.png\";\nimport cover50000 from \"../style/img/50k.png\";\nimport cover100000 from \"../style/img/100k.png\";\nimport cover500000 from \"../style/img/500k.png\";\nimport cover1000000 from \"../style/img/1m.png\";\n\nimport $ from \"jquery\";\n\nconst row1Info = {\n    3: \"red ftdo\",\n    6: \"black ftdo\",\n    9: \"red ftdo\",\n    12: \"red ftdo\",\n    15: \"black ftdo\",\n    18: \"red ftdo\",\n    21: \"red ftdo\",\n    24: \"black ftdo\",\n    27: \"red ftdo\",\n    30: \"red ftdo\",\n    33: \"black ftdo\",\n    36: \"red ftdo\"\n}\nconst row2Info = {\n    2: \"black\",\n    5: \"red\",\n    8: \"black\",\n    11: \"black\",\n    14: \"red\",\n    17: \"black\",\n    20: \"black\",\n    23: \"red\",\n    26: \"black\",\n    29: \"black\",\n    32: \"red\",\n    35: \"black\",\n}\nconst row3Info = {\n    1: \"red\",\n    4: \"black\",\n    7: \"red\",\n    10: \"black\",\n    13: \"black\",\n    16: \"red\",\n    19: \"red\",\n    22: \"black\",\n    25: \"red\",\n    28: \"black\",\n    31: \"black\",\n    34: \"red\",\n}\nconst rowArray1 = [3, 6, 9, 12, 15, 18, 21, 24, 27, 30, 33, 36]\nconst rowArray2 = [2, 5, 8, 11, 14, 17, 20, 23, 26, 29, 32, 35,]\nconst rowArray3 = [1, 4, 7, 10, 13, 16, 19, 22, 25, 28, 31, 34]\n\nfunction BetTable({\n    chipValue,\n    totalBet,\n    setTotalBet,\n    imgs,\n    setImgs,\n    spinState,\n    setBetState\n}) {\n    const ChipsCSS = {\n        100: \"chip-100-cursor\",\n        500: \"chip-500-cursor\",\n        1000: \"chip-1k-cursor\",\n        10000: \"chip-10k-cursor\",\n        50000: \"chip-50k-cursor\",\n        100000: \"chip-100k-cursor\",\n        500000: \"chip-500k-cursor\",\n        1000000: \"chip-1m-cursor\"\n    };\n\n    const ChipsImgs = {\n        100: cover100,\n        500: cover500,\n        1000: cover1000,\n        10000: cover10000,\n        50000: cover50000,\n        100000: cover100000,\n        500000: cover500000,\n        1000000: cover1000000\n    }\n\n    const OtherBetSet = {\n        Dozens1: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12],\n        Dozens2: [13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24],\n        Dozens3: [25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36],\n        Columns1: [1, 4, 7, 10, 13, 16, 19, 22, 25, 28, 31, 34],\n        Columns2: [2, 5, 8, 11, 14, 17, 20, 23, 26, 29, 32, 35],\n        Columns3: [3, 6, 9, 12, 15, 18, 21, 24, 27, 30, 33, 36],\n        Red: [1, 3, 5, 7, 9, 12, 14, 16, 18, 19, 21, 23, 25, 27, 30, 32, 34, 36],\n        Black: [2, 4, 6, 8, 10, 11, 13, 15, 17, 20, 22, 24, 26, 28, 29, 31, 33, 35],\n        Even: [2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36],\n        Odd: [1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25, 27, 29, 31, 33, 35],\n        half1: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18],\n        half2: [19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36],\n    }\n\n    let newTotalBet = { ...totalBet };\n\n    //Bet Content\n    const BetIncreasing = (value) => {\n        setBetState(true);\n        if (chipValue !== 0 && (spinState === false || spinState === null))\n            switch (value.toString()) {\n                case \"0\":\n                    var x = Math.ceil(Math.random() * 3 - 1.5);\n                    var y = Math.ceil(Math.random() * 3 - 1);\n                    var tempImg = imgs;\n                    tempImg[value].push({ x, y, chipValue });\n                    setImgs(tempImg);\n                    newTotalBet[value] = totalBet[value] + chipValue;\n                    setTotalBet(newTotalBet);\n                    break;\n                case \"1\": case \"2\": case \"3\": case \"4\": case \"5\": case \"6\": case \"7\": case \"8\": case \"9\":\n                case \"10\": case \"11\": case \"12\": case \"13\": case \"14\": case \"15\": case \"16\": case \"17\": case \"18\": case \"19\":\n                case \"20\": case \"21\": case \"22\": case \"23\": case \"24\": case \"25\": case \"26\": case \"27\": case \"28\": case \"29\":\n                case \"30\": case \"31\": case \"32\": case \"33\": case \"34\": case \"35\": case \"36\":\n                    x = Math.ceil(Math.random() * 3 + 1);\n                    y = Math.ceil(Math.random() * 3 - 2);\n                    tempImg = imgs;\n                    tempImg[value].push({ x, y, chipValue });\n                    setImgs(tempImg);\n                    newTotalBet[value] = totalBet[value] + chipValue;\n                    setTotalBet({ ...newTotalBet });\n                    break;\n                case \"column1\":\n                case \"column2\":\n                case \"column3\":\n                    x = Math.ceil(Math.random() * 3);\n                    y = Math.ceil(Math.random() * 3 - 2);\n                    tempImg = imgs;\n                    tempImg[value].push({ x, y, chipValue });\n                    setImgs(tempImg);\n                    newTotalBet[value] = totalBet[value] + chipValue;\n                    setTotalBet({ ...newTotalBet });\n                    break;\n                case \"dozen1\":\n                case \"dozen2\":\n                case \"dozen3\":\n                    x = Math.ceil(Math.random() * 10 + 20);\n                    y = Math.ceil(Math.random() * 1 - 2);\n                    tempImg = imgs;\n                    tempImg[value].push({ x, y, chipValue });\n                    setImgs(tempImg);\n                    newTotalBet[value] = totalBet[value] + chipValue;\n                    setTotalBet({ ...newTotalBet });\n                    break;\n                case \"half1\":\n                case \"half2\":\n                    x = Math.ceil(Math.random() * 10 + 5);\n                    y = Math.ceil(Math.random() * 1 - 2);\n                    tempImg = imgs;\n                    tempImg[value].push({ x, y, chipValue });\n                    setImgs(tempImg);\n                    newTotalBet[value] = totalBet[value] + chipValue;\n                    setTotalBet({ ...newTotalBet });\n                    break;\n                case \"even\":\n                case \"odd\":\n                    x = Math.ceil(Math.random() * 10 + 5);\n                    y = Math.ceil(Math.random() * 1 - 2);\n                    tempImg = imgs;\n                    tempImg[value].push({ x, y, chipValue });\n                    setImgs(tempImg);\n                    newTotalBet[value] = totalBet[value] + chipValue;\n                    setTotalBet({ ...newTotalBet });\n                    break;\n                case \"red\":\n                case \"black\":\n                    x = Math.ceil(Math.random() * 5 + 3);\n                    y = Math.ceil(Math.random() * 1 - 3.5);\n                    tempImg = imgs;\n                    tempImg[value].push({ x, y, chipValue });\n                    setImgs(tempImg);\n                    newTotalBet[value] = totalBet[value] + chipValue;\n                    setTotalBet({ ...newTotalBet });\n                    break;\n                default:\n                    break;\n            }\n    };\n\n    //Img Setting\n    const ImgSetting = (index) => {\n        return <div style={{ position: \"relative\", width: \"5vh\" }}>\n            {\n                totalBet[index] > 0 ?\n                    imgs[index].map(v => <img src={ChipsImgs[v.chipValue]} alt=\"NoImg\" style={{ width: \"4vh\", height: \"4vh\", position: \"absolute\", left: v.x + \"vh\", top: v.y + \"vh\" }} />)\n                    : \"\"\n            }\n        </div>\n    }\n\n    // HoverEvent\n    const OtherHoverEvent = (value) => {\n        switch (value) {\n            case \"Columns3\":\n                for (var i = 0; i < 12; i++) {\n                    $(\"#cell\" + OtherBetSet.Columns3[i]).addClass(\"coverColor\");\n                }\n                break;\n            case \"Columns2\":\n                for (i = 0; i < 12; i++) {\n                    $(\"#cell\" + OtherBetSet.Columns2[i]).addClass(\"coverColor\");\n                }\n                break;\n            case \"Columns1\":\n                for (i = 0; i < 12; i++) {\n                    $(\"#cell\" + OtherBetSet.Columns1[i]).addClass(\"coverColor\");\n                }\n                break;\n            case \"Dozens1\":\n                for (i = 0; i < 12; i++) {\n                    $(\"#cell\" + OtherBetSet.Dozens1[i]).addClass(\"coverColor\");\n                    $(\"#cell\" + OtherBetSet.Dozens2[i]).removeClass(\"coverColor\");\n                    $(\"#cell\" + OtherBetSet.Dozens3[i]).removeClass(\"coverColor\");\n                }\n                break;\n            case \"Dozens2\":\n                for (i = 0; i < 12; i++) {\n                    $(\"#cell\" + OtherBetSet.Dozens1[i]).removeClass(\"coverColor\");\n                    $(\"#cell\" + OtherBetSet.Dozens2[i]).addClass(\"coverColor\");\n                    $(\"#cell\" + OtherBetSet.Dozens3[i]).removeClass(\"coverColor\");\n                }\n                break;\n            case \"Dozens3\":\n                for (i = 0; i < 12; i++) {\n                    $(\"#cell\" + OtherBetSet.Dozens1[i]).removeClass(\"coverColor\");\n                    $(\"#cell\" + OtherBetSet.Dozens2[i]).removeClass(\"coverColor\");\n                    $(\"#cell\" + OtherBetSet.Dozens3[i]).addClass(\"coverColor\");\n                }\n                break;\n            case \"half1\":\n                for (i = 0; i < 6; i++) {\n                    $(\"#cell\" + OtherBetSet.Columns1[i]).addClass(\"coverColor\");\n                    $(\"#cell\" + OtherBetSet.Columns2[i]).addClass(\"coverColor\");\n                    $(\"#cell\" + OtherBetSet.Columns3[i]).addClass(\"coverColor\");\n                }\n                break;\n            case \"half2\":\n                for (i = 6; i < 12; i++) {\n                    $(\"#cell\" + OtherBetSet.Columns1[i]).addClass(\"coverColor\");\n                    $(\"#cell\" + OtherBetSet.Columns2[i]).addClass(\"coverColor\");\n                    $(\"#cell\" + OtherBetSet.Columns3[i]).addClass(\"coverColor\");\n                }\n                break;\n            case \"Even\":\n                for (i = 0; i < 18; i++) {\n                    $(\"#cell\" + OtherBetSet.Even[i]).addClass(\"coverColor\");\n                }\n                break;\n            case \"Odd\":\n                for (i = 0; i < 18; i++) {\n                    $(\"#cell\" + OtherBetSet.Odd[i]).addClass(\"coverColor\");\n                }\n                break;\n            case \"Red\":\n                for (i = 0; i < 18; i++) {\n                    $(\"#cell\" + OtherBetSet.Red[i]).addClass(\"coverColor\");\n                }\n                break;\n            case \"Black\":\n                for (i = 0; i < 18; i++) {\n                    $(\"#cell\" + OtherBetSet.Black[i]).addClass(\"coverColor\");\n                }\n                break;\n            default:\n                for (i = 0; i < 12; i++) {\n                    $(\"#cell\" + OtherBetSet.Dozens1[i]).removeClass(\"coverColor\");\n                    $(\"#cell\" + OtherBetSet.Dozens2[i]).removeClass(\"coverColor\");\n                    $(\"#cell\" + OtherBetSet.Dozens3[i]).removeClass(\"coverColor\");\n                }\n        }\n    }\n\n    // contents\n    const cell1 = (id) => {\n        return (\n            <td id={\"cell\" + id} className={row1Info[id]} onClick={() => BetIncreasing(id)}>\n                {ImgSetting(id)}\n                {id}\n            </td>\n        )\n    }\n\n    const cell2 = (id) => {\n        return (\n            <td id={\"cell\" + id} className={row2Info[id]} onClick={() => BetIncreasing(id)}>\n                {ImgSetting(id)}\n                {id}\n            </td>\n        )\n    }\n\n    const cell3 = (id) => {\n        return (\n            <td id={\"cell\" + id} className={row3Info[id]} onClick={() => BetIncreasing(id)}>\n                {ImgSetting(id)}\n                {id}\n            </td>\n        )\n    }\n\n    return (\n        <Grid item style={{ position: \"relative\" }}>\n            <table border=\"0\" cellSpacing=\"0\" cellPadding=\"0\" className={ChipsCSS[chipValue] + \" noselect\"}>\n                <tbody>\n                    <tr>\n                        <td rowSpan=\"3\" id=\"zero\" onClick={() => BetIncreasing(\"0\")}>\n                            {ImgSetting(\"0\")}\n                            0\n                        </td>\n                        {\n                            rowArray1.map((v) => {\n                                return (cell1(v))\n                            })\n                        }\n                        <td className=\"le_1\" onMouseEnter={() => OtherHoverEvent(\"Columns3\")} onMouseOut={() => OtherHoverEvent(\"\")} style={{ width: \"5vh\", height: \"5vh\", borderRadius: \"0 30px 0 0\" }} onClick={() => BetIncreasing(\"column3\")}>\n                            {ImgSetting(\"column3\")}\n                            2 TO 1\n                        </td>\n                    </tr>\n                    <tr>\n                        {\n                            rowArray2.map((v) => {\n                                return (cell2(v))\n                            })\n                        }\n                        <td className=\"le\" onMouseEnter={() => OtherHoverEvent(\"Columns2\")} onMouseOut={() => OtherHoverEvent(\"\")} onClick={() => BetIncreasing(\"column2\")}>\n                            {ImgSetting(\"column2\")}\n                            2 TO 1\n                        </td>\n                    </tr>\n                    <tr>\n                        {\n                            rowArray3.map((v) => {\n                                return (cell3(v))\n                            })\n                        }\n                        <td className=\"le\" onMouseEnter={() => OtherHoverEvent(\"Columns1\")} onMouseOut={() => OtherHoverEvent(\"\")} style={{ borderRadius: \"0 0 30px 0\" }} onClick={() => BetIncreasing(\"column1\")}>\n                            {ImgSetting(\"column1\")}\n                            2 TO 1\n                        </td>\n                    </tr>\n                    <tr>\n                        <td rowSpan=\"2\">&nbsp;</td>\n                        <td className=\"lor\" colSpan=\"4\" onMouseEnter={() => OtherHoverEvent(\"Dozens1\")} onMouseOut={() => OtherHoverEvent(\"\")} onClick={() => BetIncreasing(\"dozen1\")}>\n                            {ImgSetting(\"dozen1\")}\n                            1ST 12\n                        </td>\n                        <td className=\"lor\" colSpan=\"4\" onMouseEnter={() => OtherHoverEvent(\"Dozens2\")} onMouseOut={() => OtherHoverEvent(\"\")} onClick={() => BetIncreasing(\"dozen2\")}>\n                            {ImgSetting(\"dozen2\")}\n                            2ND 12\n                        </td>\n                        <td className=\"lor flor\" colSpan=\"4\" onMouseEnter={() => OtherHoverEvent(\"Dozens3\")} onMouseOut={() => OtherHoverEvent(\"\")} onClick={() => BetIncreasing(\"dozen3\")}>\n                            {ImgSetting(\"dozen3\")}\n                            3RD 12\n                        </td>\n                        <td>&nbsp;</td>\n                    </tr>\n                    <tr>\n                        <td className=\"lor\" colSpan=\"2\" style={{ borderRadius: \"0 0 0 30px\" }} onMouseEnter={() => OtherHoverEvent(\"half1\")} onMouseOut={() => OtherHoverEvent(\"\")} onClick={() => BetIncreasing(\"half1\")}>\n                            {ImgSetting(\"half1\")}\n                            1 - 18\n                        </td>\n                        <td className=\"lor\" colSpan=\"2\" onMouseEnter={() => OtherHoverEvent(\"Even\")} onMouseOut={() => OtherHoverEvent(\"\")} onClick={() => BetIncreasing(\"even\")}>\n                            {ImgSetting(\"even\")}\n                            EVEN\n                        </td>\n                        <td colSpan=\"2\" className=\"a_red\" onMouseEnter={() => OtherHoverEvent(\"Red\")} onMouseOut={() => OtherHoverEvent(\"\")} onClick={() => BetIncreasing(\"red\")}>\n                            {ImgSetting(\"red\")}\n                        </td>\n                        <td colSpan=\"2\" className=\"a_black\" onMouseEnter={() => OtherHoverEvent(\"Black\")} onMouseOut={() => OtherHoverEvent(\"\")} onClick={() => BetIncreasing(\"black\")}>\n                            {ImgSetting(\"black\")}\n                        </td>\n                        <td className=\"lor\" colSpan=\"2\" onMouseEnter={() => OtherHoverEvent(\"Odd\")} onMouseOut={() => OtherHoverEvent(\"\")} onClick={() => BetIncreasing(\"odd\")}>\n                            {ImgSetting(\"odd\")}\n                            ODD\n                        </td>\n                        <td className=\"lor flor\" colSpan=\"2\" style={{ borderRadius: \"0 0 30px 0\" }} onMouseEnter={() => OtherHoverEvent(\"half2\")} onMouseOut={() => OtherHoverEvent(\"\")} onClick={() => BetIncreasing(\"half2\")}>\n                            {ImgSetting(\"half2\")}\n                            19 - 36\n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n        </Grid>\n    );\n}\n\nexport default BetTable;","import React, { useState, useEffect } from 'react'\nimport { Grid } from '@mui/material';\nimport WheelSet from \"./layouts/wheelset\";\nimport ChipSet from \"./layouts/chipset\";\nimport SpinSet from \"./layouts/spinset\";\nimport BetingTable from \"./layouts/bettable\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nfunction Home() {\n\n    const dispatch = useDispatch();\n    const [spinState, setSpinState] = useState(null);\n    const [betState, setBetState] = useState(false);\n    const [spinImg, setSpinImg] = useState(\"\");\n    const [chipValue, setChipValue] = useState(100);\n    const [currentLength, setCurrentLength] = useState(0);\n\n    const initTotalBet = {\n        \"0\": 0, \"1\": 0, \"2\": 0, \"3\": 0, \"4\": 0, \"5\": 0, \"6\": 0, \"7\": 0, \"8\": 0, \"9\": 0,\n        \"10\": 0, \"11\": 0, \"12\": 0, \"13\": 0, \"14\": 0, \"15\": 0, \"16\": 0, \"17\": 0, \"18\": 0, \"19\": 0,\n        \"20\": 0, \"21\": 0, \"22\": 0, \"23\": 0, \"24\": 0, \"25\": 0, \"26\": 0, \"27\": 0, \"28\": 0, \"29\": 0,\n        \"30\": 0, \"31\": 0, \"32\": 0, \"33\": 0, \"34\": 0, \"35\": 0, \"36\": 0, \"column1\": 0, \"column2\": 0, \"column3\": 0,\n        \"dozen1\": 0, \"dozen2\": 0, \"dozen3\": 0, \"half1\": 0, \"half2\": 0, \"even\": 0, \"odd\": 0, \"red\": 0, \"black\": 0\n    }\n\n    const initImgs = {\n        \"0\": [], \"1\": [], \"2\": [], \"3\": [], \"4\": [], \"5\": [], \"6\": [], \"7\": [], \"8\": [], \"9\": [], \"10\": [],\n        \"11\": [], \"12\": [], \"13\": [], \"14\": [], \"15\": [], \"16\": [], \"17\": [], \"18\": [], \"19\": [], \"20\": [],\n        \"21\": [], \"22\": [], \"23\": [], \"24\": [], \"25\": [], \"26\": [], \"27\": [], \"28\": [], \"29\": [], \"30\": [],\n        \"31\": [], \"32\": [], \"33\": [], \"34\": [], \"35\": [], \"36\": [], \"column1\": [], \"column2\": [], \"column3\": [],\n        \"dozen1\": [], \"dozen2\": [], \"dozen3\": [], \"half1\": [], \"half2\": [], \"even\": [], \"odd\": [], \"red\": [], \"black\": []\n    }\n\n    const [totalBet, setTotalBet] = useState(initTotalBet);\n\n    const [imgs, setImgs] = useState(initImgs);\n\n    useEffect(() => {\n\n        window.onmessage = (e) => {\n\n            // poolAddress: poolAddress,\n            // name: \"iframe_message\",\n            // token: localStorage.jwtToken,\n            if (e.data.name === \"iframe_message\") {\n                console.log(e.data.name);\n                dispatch({\n                    type: \"SET_MYBALANCE\",\n                    payload: e.data.allowanceAmount\n                });\n                \n                dispatch({\n                    type: \"SET_TOKEN\",\n                    payload: e.data.token\n                });\n                dispatch({\n                    type: \"SET_POOLADDRESS\",\n                    payload: e.data.poolAddress\n                });\n\n            }\n        }\n\n        window.parent.postMessage({ name: \"iframe_message\" }, \"*\");\n    }, []);\n\n    useEffect(() => {\n        var totalBetAmount = 0\n        for (var key in totalBet) {\n            totalBetAmount += totalBet[key];\n        }\n        dispatch({\n            type : \"SET_TOTALBET\",\n            payload : totalBetAmount\n        })\n    }, [totalBet])\n\n    const handleReset = ()=>{\n        setTotalBet(initTotalBet);\n        setImgs(initImgs);\n    }\n\n    return (\n        <div>\n            <Grid container><Grid item sm={12} md={1}></Grid>\n                <Grid item sm={12} md={10}>\n                    <Grid container justifyContent=\"center\" alignItems=\"center\" spacing={10}>\n                        <Grid item sm={12} md={4}>\n                            <WheelSet\n                                spinState={spinState}\n                                currentLength={currentLength}\n                            />\n                        </Grid>\n                        <Grid item sm={12} md={8}>\n                            <br /><br /><br />\n                            <Grid container justifyContent=\"center\" alignItems=\"center\">\n                                <Grid item md={9}>\n                                    <ChipSet\n                                        chipValue={chipValue}\n                                        setChipValue={setChipValue}\n                                        spinState={spinState}\n                                    />\n                                </Grid>\n                                <Grid item md={3}>\n                                    <SpinSet\n                                        totalBet={totalBet}\n                                        spinState={spinState}\n                                        setSpinState={setSpinState}\n                                        spinImg={spinImg}\n                                        setSpinImg={setSpinImg}\n                                        setCurrentLength={setCurrentLength}\n                                        setTotalBet={setTotalBet}\n                                        setImgs={setImgs}\n                                        betState={betState}\n                                        setBetState={setBetState}\n                                    />\n                                    <div className = \"reset_button\" onClick = {handleReset}>\n                                        Reset\n                                    </div>\n                                </Grid>\n                            </Grid>\n                            <br /><br />\n                            <BetingTable\n                                spinState={spinState}\n                                chipValue={chipValue}\n                                totalBet={totalBet}\n                                setTotalBet={setTotalBet}\n                                imgs={imgs}\n                                setImgs={setImgs}\n                                setBetState={setBetState}\n                            />\n                        </Grid>\n                    </Grid>\n                    <Grid item sm={12} md={2}></Grid>\n                </Grid>\n            </Grid>\n        </div >\n    )\n};\n\nexport default Home;","import React, { useEffect, useState } from 'react';\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport \"../components/style/custom.css\";\n\nimport Header from \"../components/header\";\nimport Home from '../components/home';\n\nfunction Routes() {\n    const [balance, setBalance] = useState(0);\n    useEffect(() => {\n\n    }, []);\n\n    return (\n        <BrowserRouter>\n            <Header balance={balance} />\n            <Switch>\n                <Route path=\"/\" component={Home} />\n            </Switch>\n        </BrowserRouter>\n    );\n}\n\nexport default Routes;\n","\nimport jwt_decode from \"jwt-decode\";\n\nconst initState = {\n    myBalance: 0, \n    token: \"\",\n    pooladdress: \"\",\n}\n\nconst sessionReducer = (state = initState, action) => {\n    switch (action.type) {\n        case 'SET_MYBALANCE':\n            return {\n                ...state,\n                myBalance: action.payload\n            }\n        case 'SET_TOKEN':\n            try {\n                var userDecoded = jwt_decode(action.payload);\n                return {\n                    ...state,\n                    token: action.payload,\n                    balance: userDecoded.balance,\n                }\n            }catch(err){\n                return {\n                    ...state,\n                    token: \"invalid\",\n                    myBalance: 0,\n                }\n            }\n        case 'SET_POOLADDRESS':\n            return {\n                ...state,\n                pooladdress: action.payload\n            }\n        case 'SET_TOTALBET':\n            return {\n                ...state,\n                totalBet: action.payload\n            }\n        default:\n            return state\n    }\n}\n\nexport default sessionReducer;","import {combineReducers} from 'redux';\nimport sessionReducer from './session';\n\nexport default combineReducers({\n    sessionData: sessionReducer\n})","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"../reducers\";\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  compose(\n    applyMiddleware(...middleware),\n    (window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ &&\n      window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__()) ||\n    compose\n  )\n);\n\nexport default store;","import Routes from './router';\nimport store from './store';\nimport { Provider } from 'react-redux';\n\nimport \"./components/style/custom.css\";\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Routes />\n    </Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}